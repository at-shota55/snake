{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","37","38","39","40","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0NAoCeA,EAlCI,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,OAAiD,IAAzCC,kBAAyC,MAA5B,EAA4B,EAAzBC,EAAyB,EAAzBA,mBACpCC,EAAeF,EAAa,EAAI,GAAK,YACrCG,EAAiBH,EAAa,EAAI,GAAK,YAI7C,OACI,sBAAKI,UAAU,aAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAMA,UAAU,mBAAhB,sBACA,qBAAKA,UAAU,mCAAf,SACI,qBAAKA,UAAU,YAAf,SAA4BL,SAGpC,sBAAKK,UAAU,kBAAf,UACI,sBAAMA,UAAU,mBAAhB,0BACA,sBAAKA,UAAU,mCAAf,UACI,sBAAMA,UAAU,YAAhB,SAA6BJ,IAC7B,sBAAKI,UAAU,8BAAf,UACI,qBACIA,UAAS,0CAAqCF,GAC9CG,QAlBD,kBAAMJ,EAAmBD,EAAa,MAoBzC,qBACII,UAAS,4CAAuCD,GAChDE,QArBC,kBAAMJ,EAAmBD,EAAY,mBCWnDM,EAfD,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACb,OACI,qBAAKH,UAAU,QAAf,SAGQG,EAAOC,KAAI,SAACC,GACR,OAAOA,EAAID,KAAI,SAACE,GACZ,OAAO,qBAAKN,UAAS,eAAUM,cCKxCC,EAZA,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACvC,OACI,sBAAKX,UAAU,SAAf,UAEiB,aAAXQ,GAAyB,wBAAQR,UAAU,mBAAmBC,QAASU,EAA9C,sBACd,SAAXH,GAAqB,wBAAQR,UAAU,eAAeC,QAASQ,EAA1C,mBACV,cAAXD,GAA0B,wBAAQR,UAAU,oBAAoBC,QAASQ,EAA/C,mBACf,YAAXD,GAAwB,wBAAQR,UAAU,kBAAkBC,QAASS,EAA7C,sB,cC0BvBE,EA1BW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAMzB,OACI,sBAAKb,UAAU,qBAAf,UACI,wBAAQA,UAAU,gCAAgCC,QAL3C,kBAAMY,EAAS,SAKtB,SACI,cAAC,IAAD,CAAiBC,KAAMC,QAE3B,gCACI,wBAAQf,UAAU,8BAA8BC,QAX/C,kBAAMY,EAAS,OAWhB,SACI,cAAC,IAAD,CAAiBC,KAAME,QAE3B,wBAAQhB,UAAU,gCAAgCC,QAX/C,kBAAMY,EAAS,SAWlB,SACI,cAAC,IAAD,CAAiBC,KAAMG,WAG/B,wBAAQjB,UAAU,iCAAiCC,QAjB3C,kBAAMY,EAAS,UAiBvB,SACI,cAAC,IAAD,CAAiBC,KAAMI,YC5B1BC,EAAkB,SAACC,EAAWC,GACvC,IADqD,IAAD,aAEhD,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAY,EAAI,IAAM,EACtDM,EAAIH,KAAKC,MAAMD,KAAKE,UAAYL,EAAY,EAAI,IAAM,EAG5D,IAFiBC,EAASM,MAAK,SAACC,GAAD,OAAUA,EAAKN,IAAMA,GAAKM,EAAKF,IAAMA,KAGhE,MAAM,CAAN,EAAO,CAAEJ,IAAGI,SANR,CAAC,IAAD,0CAWHG,EAAa,SAACT,EAAWU,GAElC,IADA,IAAM3B,EAAS,GACN4B,EAAI,EAAGA,EAAIX,EAAWW,IAAK,CAChC,IAAMC,EAAO,IAAIC,MAAMb,GAAWc,KAAK,IACvC/B,EAAOgC,KAAKH,GAGhB7B,EAAO2B,EAAMJ,GAAGI,EAAMR,GAAK,QAG3B,IAAMc,EAAOjB,EAAgBC,EAAW,CAACU,IAGzC,OAFA3B,EAAOiC,EAAKV,GAAGU,EAAKd,GAAK,OAElBnB,GCnBLkC,EAAkB,CAAEf,EAAG,GAAII,EAAG,IAC9BY,EAAgBT,EAAW,GAAIQ,GAG/BE,EAAa,CAAC,IAAM,IAAK,IAAK,GAAI,IAGlCC,EAAaC,OAAOC,OAAO,CAC/BC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,SAAU,aAINC,EAAYN,OAAOC,OAAO,CAC5BM,GAAI,KACJC,MAAO,QACPC,KAAM,OACNC,KAAM,SAIJC,EAAoBX,OAAOC,OAAO,CACtCM,GAAI,OACJC,MAAO,OACPC,KAAM,QACNC,KAAM,OAIFE,EAAQZ,OAAOC,OAAO,CAC1BM,GAAI,CAAE1B,EAAG,EAAGI,GAAI,GAChBuB,MAAO,CAAE3B,EAAG,EAAGI,EAAG,GAClBwB,KAAM,CAAE5B,GAAI,EAAGI,EAAG,GAClByB,KAAM,CAAE7B,EAAG,EAAGI,EAAG,KAIb4B,EAAsBb,OAAOC,OAAO,CACxCa,GAAIR,EAAUG,KACdM,GAAIT,EAAUC,GACdS,GAAIV,EAAUE,MACdS,GAAIX,EAAUI,OAGZQ,OAAQC,EAENC,EAAc,WACdF,GAGJG,cAAcH,IAoKDI,MA/If,WAAgB,IAAD,EACeC,mBAAS1B,GADxB,mBACNnC,EADM,KACE8D,EADF,OAGUD,mBAAS,IAHnB,mBAGPE,EAHO,KAGDC,EAHC,OAIeH,mBAASxB,EAAWG,MAJnC,mBAINnC,EAJM,KAIE4D,EAJF,OAKqBJ,mBAASjB,EAAUC,IALxC,mBAKNqB,EALM,KAKKC,EALL,OAMuBN,mBA5EZ,GAsEX,mBAMNpE,EANM,KAMM2E,EANN,OAOWP,mBAAS,GAPpB,mBAONQ,EAPM,KAOAC,EAPA,KASbC,qBAAU,WASR,OARAP,EAAQ,CAAC9B,IAKTsB,EAAQgB,aAAY,WAClBF,GAAS,SAAAD,GAAI,OAAIA,EAAO,OAFTjC,EAAW3C,EAAa,IAIlCiE,IACN,CAACjE,IAEJ8E,qBAAU,WACW,IAAhBR,EAAKvE,QAAgBa,IAAWgC,EAAWI,UAG1BgC,KAElBR,EAAU5B,EAAWM,aAEtB,CAAC0B,IAEJ,IAeMK,EAAoBC,uBAAY,SAACC,GACrC,GAAIvE,IAAWgC,EAAWI,QACxB,OAAOyB,EAELjB,EAAkBiB,KAAeU,GAGrCT,EAAaS,KACZ,CAACV,EAAW7D,IAETX,EAAqBiF,uBAAY,SAAClF,GAClCY,IAAWgC,EAAWG,OAGtB/C,EAAa,GAAKA,EAAa2C,EAAW5C,QAG9C4E,EAAc3E,MACb,CAACY,EAAQZ,IAEZ8E,qBAAU,WACR,IAAMM,EAAgB,SAACC,GACrB,IAAMF,EAAezB,EAAoB2B,EAAEC,SACtCH,GAGLF,EAAkBE,IAGpB,OADAI,SAASC,iBAAiB,UAAWJ,GAC9B,kBAAMG,SAASE,oBAAoB,UAAWL,MACpD,CAACH,IAGJ,IAAMD,EAAe,WAAO,IAhGTxD,EAAWkE,EAgGH,EACRpB,EAAK,GAAd5C,EADiB,EACjBA,EAAGI,EADc,EACdA,EAGL6D,EAAQlC,EAAMgB,GACdmB,EAAc,CAClBlE,EAAGA,EAAIiE,EAAMjE,EACbI,EAAGA,EAAI6D,EAAM7D,GAIf,GA3GiBN,EA2GFjB,EAAOR,QA3GM2F,EA2GEE,GA1GnB9D,EAAI,GAAK4D,EAAShE,EAAI,GAI/BgE,EAAS5D,EAAIN,EAAY,GAAKkE,EAAShE,EAAIF,EAAY,GAOtC,SAACjB,EAAQmF,GAC9B,MAA0C,UAAnCnF,EAAOmF,EAAS5D,GAAG4D,EAAShE,GA8FamE,CAAetF,EAAQqF,GAEnE,OADA3B,KACO,EAIT,IAAM6B,EAAO,YAAOxB,GACpB,GAA6C,SAAzC/D,EAAOqF,EAAY9D,GAAG8D,EAAYlE,GAAe,CACnD,IAAMqE,EAAgBD,EAAQE,MAC9BzF,EAAOwF,EAAcjE,GAAGiE,EAAcrE,GAAK,OACtC,CACL,IAAMc,EAAOjB,EAAgBhB,EAAOR,OAAR,sBAAoB+F,GAApB,CAA6BF,KACzDrF,EAAOiC,EAAKV,GAAGU,EAAKd,GAAK,OAY3B,OANAnB,EAAOqF,EAAY9D,GAAG8D,EAAYlE,GAAK,QAEvCoE,EAAQG,QAAQL,GAEhBrB,EAAQuB,GACRzB,EAAU9D,IACH,GAKT,OACE,sBAAKH,UAAU,MAAf,UACE,yBAAQA,UAAU,SAAlB,UACE,qBAAKA,UAAU,kBAAf,SACE,oBAAIA,UAAU,QAAd,0BAEF,cAAC,EAAD,CAAYL,OAAQuE,EAAKvE,OAAQC,WAAYA,EAAaC,mBAAoBA,OAEhF,sBAAMG,UAAU,OAAhB,SACE,cAAC,EAAD,CAAOG,OAAQA,MAEjB,yBAAQH,UAAU,SAAlB,UACE,cAAC,EAAD,CACEQ,OAAQA,EACRE,OApGO,kBAAM0D,EAAU5B,EAAWK,YAqGlCpC,QAvGQ,kBAAM2D,EAAU5B,EAAWI,UAwGnCjC,UAnGU,WAChBgD,EAAQgB,aAAY,WAClBF,GAAQ,SAAAD,GAAI,OAAIA,EAAO,OA7GL,KA+GpBF,EAAavB,EAAUC,IACvBoB,EAAU5B,EAAWG,MACrBwB,EAAQ,CAAC9B,IACT4B,EAAUpC,EAAW,GAAIQ,OA8FrB,cAAC,EAAD,CAAmBxB,SAAUgE,WC7MtBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,SAM1BZ,M","file":"static/js/main.68f07128.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\r\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden'\r\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden'\r\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\r\n    const onDownDifficulty = () => onChangeDifficulty(difficulty -1)\r\n\r\n    return (\r\n        <div className=\"navigation\">\r\n            <div className=\"navigation-item\">\r\n                <span className=\"navigation-label\">Length: </span>\r\n                <div className=\"navigation-item-number-container\">\r\n                    <div className=\"num-board\">{length}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"navigation-item\">\r\n                <span className=\"navigation-label\">Difficulty: </span>\r\n                <div className=\"navigation-item-number-container\">\r\n                    <span className=\"num-board\">{difficulty}</span>\r\n                    <div className=\"difficulty-button-container\">\r\n                        <div\r\n                            className={`difficulty-button difficulty-up ${upVisibility}`}\r\n                            onClick={onUpDifficulty}\r\n                        ></div>\r\n                        <div\r\n                            className={`difficulty-button difficulty-down ${downVisibility}`}\r\n                            onClick={onDownDifficulty}\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};  \r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Field = ({ fields }) => {\r\n    return (\r\n        <div className=\"field\">\r\n            {\r\n                // new Array(35 * 35).fill('').map(() => <div className=\"dots\"></div>)\r\n                fields.map((row) => {\r\n                    return row.map((column) => {\r\n                        return <div className={`dots ${column}`}></div>\r\n                    })\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Field;","import React from 'react';\r\n\r\nconst Button = ({ status, onStart, onStop, onRestart }) => {\r\n    return (\r\n        <div className=\"button\">\r\n            {/* <button onClick={onStart} >start</button> */}\r\n            { status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button> }\r\n            { status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button> }\r\n            { status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button> }\r\n            { status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button> }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faArrowLeft,\r\n    faArrowUp,\r\n    faArrowDown,\r\n    faArrowRight\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ManipulationPanel = ({ onChange }) => {\r\n    const onUp = () => onChange('up');\r\n    const onRight = () => onChange('right');\r\n    const onLeft = () => onChange('left');\r\n    const onDown = () => onChange('down');\r\n\r\n    return (\r\n        <div className=\"manipulation-panel\">\r\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}> \r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n            </button>\r\n            <div>\r\n                <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\r\n                    <FontAwesomeIcon icon={faArrowUp} />\r\n                </button>\r\n                <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\r\n                    <FontAwesomeIcon icon={faArrowDown} />\r\n                </button>\r\n            </div>\r\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\r\n                <FontAwesomeIcon icon={faArrowRight} />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManipulationPanel;","//エサ配置\r\nexport const getFoodPosition = (fieldSize, excludes) => {\r\n    while(true) {\r\n        const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1; //1~33\r\n        const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n        const conflict = excludes.some((item) => item.x === x && item.y === y) //ランダムに取得した座標が排除リストの中にあるかチェックをしている\r\n\r\n        if (!conflict) { //ランダムに表示されるエサがスネークの位置とかぶってしまった場合を排除\r\n            return { x, y };        \r\n        }\r\n    }\r\n}\r\n\r\nexport const initFields = (fieldSize, snake) => {\r\n    const fields = [] \r\n    for (let i = 0; i < fieldSize; i++) {\r\n        const cols = new Array(fieldSize).fill('')\r\n        fields.push(cols)\r\n    }\r\n    // fields[initialPosition.y][initialPosition.x] = 'snake' //初期位置\r\n    fields[snake.y][snake.x] = 'snake'\r\n    \r\n    //エサ配置\r\n    const food = getFoodPosition(fieldSize, [snake]);\r\n    fields[food.y][food.x] = 'food'\r\n\r\n    return fields\r\n}","import React, { useCallback, useState, useEffect } from 'react';\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport { initFields, getFoodPosition } from './utils/index';\n\nconst initialPosition = { x: 17, y: 17 }　//初期位置\nconst initialValues = initFields(35, initialPosition);\nconst defaultInterval = 100; //インターバルの長さ\nconst defaultDifficulty = 3;\nconst Difficulty = [1000, 500, 100, 50, 10];\n\n//ステータスのリストをそれぞれオブジェクトで持つようにする\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover',\n});\n　\n//進行方向の定義\nconst Direction = Object.freeze({\n    up: 'up',\n    right: 'right',\n    left: 'left',\n    down: 'down'\n});\n\n//keyとvalueが逆\nconst OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up'\n});\n\n//それぞれの方向における座標の変化量\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n});\n\n//矢印キーのキーコード\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n});\n\nlet timer = undefined;\n\nconst unsubscribe = () => {\n  if(!timer){\n    return\n  }\n  clearInterval(timer)\n}\n\n//xかyの値がマイナスでなくフィールドサイズより小さい座標に収まっていない場合はぶつかっていると判断してtrueを返す関数isCollision関数を定義している\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) { \n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues);\n  // const [position, setPosition] = useState();\n  const[body, setBody] = useState([]);\n  const [status, setStatus] = useState(GameStatus.init);\n  const [direction, setDirection] = useState(Direction.up); //進行方向\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\n  const [tick, setTick] = useState(0);　//時計の針\n\n  useEffect(() => {\n    setBody([initialPosition])\n    // setBody(new Array(15).fill('').map((_item, index) => ({ x: 17, y: 17 + index })),) //検証用\n\n    //ゲームの中の時間を管理する\n    const interval = Difficulty[difficulty - 1]; //難易度変更によりtickが変わる\n    timer = setInterval(() => {\n      setTick( tick => tick + 1)\n    }, interval)\n    return unsubscribe\n  }, [difficulty])\n\n  useEffect(() => {\n    if(body.length === 0 || status !== GameStatus.playing) { //ゲームがプレイ中でない限りスネークが動かないようにしたい\n      return\n    }\n    const canContinue = handleMoving();\n    if(!canContinue) {\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick]) //ゲームの中の時間が進む度にgoUp関数が呼ばれるようにするため\n\n  const onStart = () => setStatus(GameStatus.playing) //スタートボタンを押したら、スネークが動き出すようにしたい\n\n  const onStop = () => setStatus(GameStatus.suspended) //一時停止\n\n  //gameoverした後の関数\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval)\n    setDirection(Direction.up)\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setFields(initFields(35, initialPosition))\n  };\n\n  const onChangeDirection = useCallback((newDirection) => { //useCallback([コールバック], [依存変数の配列]);\n    if (status !== GameStatus.playing) {\n      return direction\n    }\n    if (OppositeDirection[direction] === newDirection) {\n      return\n    }\n    setDirection(newDirection)\n  }, [direction, status]);\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if (status !== GameStatus.init) {\n      return\n    }\n    if (difficulty < 1 || difficulty > Difficulty.length) {\n      return\n    }\n    setDifficulty(difficulty)\n  }, [status, difficulty])\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n    \n\n  const handleMoving = () => {\n    const { x, y } = body[0];\n    // const nextY = Math.max(y -1, 0);　//まっすぐ上に移動させるための座標移動\n    // const newPosition = { x, y: y -1};\n    const delta = Delta[direction];\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    }\n\n    //gameover\n    if(isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) { \n      unsubscribe()\n      return false\n    }\n\n    // fields[y][x] = '' //元いた位置を空に\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') { //エサを食べていないときの処理\n      const removingTrack = newBody.pop(); //pop（末尾の配列を取り出して削除）\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n\n    // fields[nextY][x] = 'snake'　//新たな位置にsnakeを\n    // setPosition({ x, y: nextY})\n    // fields[newPosition.y][x] = 'snake'\n    fields[newPosition.y][newPosition.x] = 'snake'\n    // setBody([newPosition])\n    newBody.unshift(newPosition) //unshift（配列の先頭に要素を追加）\n\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n\n  // console.log('direction', direction)\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation length={body.length} difficulty={difficulty}  onChangeDifficulty={onChangeDifficulty}/>\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button \n          status={status}\n          onStop={onStop}\n          onStart={onStart} \n          onRestart={onRestart}\n        />\n        <ManipulationPanel onChange={onChangeDirection}/>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}